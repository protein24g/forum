plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starter (프로젝트의 기본적인 구성에 필요한 스타터 키트)
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Spring Boot + Thymeleaf 템플릿 엔진 지원
	implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Boot + Web(MVC) 지원
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Boot + Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Boot + Spring Security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // 유효성 검사 어노테이션

	// 데이터베이스 (데이터베이스 연결 및 SQL 실행을 위한 의존성)
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB JDBC 드라이버
	runtimeOnly "com.h2database:h2" // H2 데이터베이스 (인메모리 및 임베디드 모드 지원)

	// 개발 도구 (개발 시 유용한 도구 및 플러그인)
	compileOnly 'org.projectlombok:lombok' // Lombok (자동으로 getter, setter, toString 등을 생성해주는 라이브러리)
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // Spring Boot 개발 도구 (리스타트 및 라이브 리로드 지원)
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // Spring Boot 구성 메타데이터 생성
	annotationProcessor 'org.projectlombok:lombok' // Lombok 어노테이션 프로세서

	// 테스팅 (테스트 코드 작성을 위한 의존성)
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot + 테스트(모킹, 단위 테스트 등) 지원

}

tasks.named('test') {
	useJUnitPlatform()
}
